# This is a basic workflow to help you get started with Actions

name: CICD

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
  
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3
      
      - name: Set env
        run: echo "DATE=$(date +%y-%m-%d-%H)" > GITHUB_ENV
      
      
      - name: install jdk
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: gradle chmod
        run: chmod +x ./gradlew

      - name: gradle build
        run: ./gradlew build --no-daemon

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: copy war
        run: cp ./build/libs/*.war ./Dockerfile

      - name: docker build
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_latest ./Dockerfile
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_$GITHUB_RUN_NUMBER ./Dockerfile

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: docker push
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_$GITHUB_RUN_NUMBER

      - name: Deploy
        uses: safe2008/eks-actions@v0.0.4
        env:
          aws_access_key_id: ${{ secrets.AWS_KEYID }}
          aws_secret_access_key: ${{ secrets.AWS_KEY }}
          aws_region: ${{ secrets.AWS_REGION }}
          cluster_name: ${{ secrets.CLUSTER_NAME }}
        with:
          args: | 
            kubectl rollout restart deployment/was
            aws s3 sync ./build/libs s3://${{ secrets.BUCKET_NAME }}/${{ github.run_number }}

